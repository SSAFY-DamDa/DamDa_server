<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.journey.model.mapper.JourneyMapper">

    <resultMap id="journeyResultMap" type="com.ssafy.journey.model.JourneyDto">
        <result column="journey_id" property="journeyId" />
        <result column="title" property="title" />
        <result column="start_date" property="startDate" />
        <result column="end_date" property="endDate" />
        <result column="personnel" property="personnel" />
        <result column="sido_name" property="sidoName" />
        <result column="gugun_name" property="gugunName" />
        <result column="attraction_title" property="attractionTitle" />
        <result column="attraction_address" property="attractionAddress" />        
        <result column="day" property="day" />
        <result column="order_in_day" property="orderInDay" />
        <result column="color" property="color" />
    </resultMap>

    <resultMap id="journeyRouteResultMap" type="com.ssafy.journey.model.JourneyRouteDto">
        <id property="journeyId" column="journey_id" />
        <result property="day" column="day" />
        <result property="orderInDay" column="order_in_day" />
        <result property="contentId" column="content_id" />
    </resultMap>

    <insert id="insertJourney">
        INSERT INTO journeys (user_id, title, start_date, end_date, personnel, color, content_type_id, sido_code, gugun_code)
        VALUES (#{userId}, #{title}, #{startDate}, #{endDate}, #{personnel}, #{color}, #{contentTypeId}, #{sidoCode}, #{gugunCode})
    </insert>

    <insert id="insertJourneyRoute">
        INSERT INTO journey_routes (journey_id, day, order_in_day, content_id)
        VALUES (#{journeyId}, #{day}, #{orderInDay}, #{contentId})
    </insert>

    <update id="updateJourney">
        UPDATE journeys
        SET title = #{title}, start_date = #{startDate}, end_date = #{endDate},
            personnel = #{personnel}, color = #{color}, content_type_id = #{contentTypeId},
            sido_code = #{sidoCode}, gugun_code = #{gugunCode}
        WHERE id = #{id}
    </update>

    <delete id="deleteJourney">
        DELETE FROM journeys WHERE id = #{id}
    </delete>

    <select id="selectJourneyList" resultMap="journeyResultMap">
        SELECT * from journeys
    </select>

    <select id="selectJourneyById" parameterType="String" resultMap="journeyResultMap">
        SELECT j.id AS journey_id, j.title, j.start_date, j.end_date, j.personnel, s.sido_name, g.gugun_name, a.title AS attraction_title, a.addr1 AS attraction_address, jr.day, jr.order_in_day
		FROM journeys j
		JOIN member_journey mj ON j.id = mj.journey_id
		JOIN journey_routes jr ON j.id = jr.journey_id
		JOIN attractions a ON jr.content_id = a.content_id
		JOIN sidos s ON j.sido_code = s.sido_code
		JOIN guguns g ON j.gugun_code = g.gugun_code
		WHERE mj.user_id = #{id}
		ORDER BY j.id, jr.day, jr.order_in_day;
    </select>

</mapper>